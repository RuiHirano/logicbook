"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[500],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=l,g=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8294:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={sidebar_position:1},c="Build a simple logic",p={unversionedId:"tutorial-basics/build-a-simple-logic",id:"tutorial-basics/build-a-simple-logic",title:"Build a simple logic",description:"Build a simple logic in isolation",source:"@site/docs/tutorial-basics/build-a-simple-logic.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/build-a-simple-logic",permalink:"/logicbook/docs/tutorial-basics/build-a-simple-logic",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/build-a-simple-logic.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/logicbook/docs/intro"},next:{title:"Build a class logic",permalink:"/logicbook/docs/tutorial-basics/build-a-class-logic"}},s={},u=[{value:"Simple Join Logic",id:"simple-join-logic",level:2},{value:"1. Create the join logic file",id:"1-create-the-join-logic-file",level:3},{value:"2. Create the test file",id:"2-create-the-test-file",level:3},{value:"3. Create the markdown file",id:"3-create-the-markdown-file",level:3},{value:"4. Create the logicbook file",id:"4-create-the-logicbook-file",level:3},{value:"5. Run server and check the logic",id:"5-run-server-and-check-the-logic",level:3}],m={toc:u};function d(e){var t=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-a-simple-logic"},"Build a simple logic"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Build a simple logic in isolation")),(0,r.kt)("h2",{id:"simple-join-logic"},"Simple Join Logic"),(0,r.kt)("p",null,"First, let\u2019s create the join logic and its accompanying book file: src/join.py and src/logics/join_book.py."),(0,r.kt)("h3",{id:"1-create-the-join-logic-file"},"1. Create the join logic file"),(0,r.kt)("p",null,"We\u2019ll begin with a baseline implementation of the logic. We create src/join.py and write below script:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/join.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def join(a: str, b: str):\n  return a + b\n")),(0,r.kt)("p",null,"The above creates a function that takes a and b as inputs and calculates their join."),(0,r.kt)("h3",{id:"2-create-the-test-file"},"2. Create the test file"),(0,r.kt)("p",null,"Below we create logic\u2019s test using unittest library:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/test_join.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import unittest\nfrom join import join\n\nclass TestJoin(unittest.TestCase):\n\n    def test_join(self):\n        actual = join("Hello", "World")\n        self.assertEqual("HelloWorld", actual)\n\nif __name__ == \'__main__\':\n    unittest.main()\n')),(0,r.kt)("h3",{id:"3-create-the-markdown-file"},"3. Create the markdown file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/logics/join.md")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},'# Join\n\nThis is join description\n\n### Usage\n---\nfrom join import join\nresult = join("Hello", "Logicbook")\nprint(result)  # "HelloLogicbook\n---\n')),(0,r.kt)("h3",{id:"4-create-the-logicbook-file"},"4. Create the logicbook file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/logics/join_book.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from join import join\nfrom logicbook import Logic\nfrom test_join import TestJoin\n\nmylogic = Logic(\n    name="Join",\n    func=join,\n    readme="join.md",\n)\n\nmylogic.add_example(\n    name="Default", \n    func=join,\n    args={\n        "a": "Hello ",\n        "b": "Logicbook!"\n    }\n)\n\nmylogic.add_test(\n  name="Test Class of Join", \n  test_case=TestJoin\n)\n')),(0,r.kt)("p",null,"There are two basic levels of organization in Logicbook: the logic and its child examples. Think of each example as a permutation of a logic. You can have as many examples per logic as you need."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Logic",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Example1"),(0,r.kt)("li",{parentName:"ul"},"Example2"),(0,r.kt)("li",{parentName:"ul"},"Example3")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," Logic Arguments ")),(0,r.kt)("p",null,"To tell Logicbook about the logic we are documenting, we enter logic arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mylogic = Logic(\n    name="Join",\n    func=join,\n    readme="join.md",\n)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"how to refer to the component in the sidebar of the Storybook app")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"func"),(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"the logic (function) itself")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"readme"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"readme file path (relative path from logics directory)")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," add_example Arguments ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mylogic.add_example(\n    name="Default", \n    func=join,\n    args={\n        "a": "Hello",\n        "b": "Logicbook!"\n    }\n)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"name of example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"func"),(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"the logic (function) itself")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"args"),(0,r.kt)("td",{parentName:"tr",align:null},"dict"),(0,r.kt)("td",{parentName:"tr",align:null},"readme file path (relative path from logics directory)")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," add_test Arguments ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'mylogic.add_test(\n  name="Test Class of Join", \n  test_case=TestJoin\n)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"name of example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cls"),(0,r.kt)("td",{parentName:"tr",align:null},"class"),(0,r.kt)("td",{parentName:"tr",align:null},"the Testcase (class)")))),(0,r.kt)("h3",{id:"5-run-server-and-check-the-logic"},"5. Run server and check the logic"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"Docs Version Dropdown",src:n(5316).Z,width:"2652",height:"1884"})))}d.isMDXComponent=!0},5316:function(e,t,n){t.Z=n.p+"assets/images/example_join-7691d3458b511ec74f7d1992124b2ed2.png"}}]);