"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[528],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var i=n.createContext({}),s=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,i=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),p=s(a),m=l,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return a?n.createElement(g,o(o({ref:e},u),{},{components:a})):n.createElement(g,o({ref:e},u))}));function m(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,o=new Array(r);o[0]=p;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:l,o[1]=c;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7870:function(t,e,a){a.r(e),a.d(e,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return d}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),o=["components"],c={sidebar_position:2},i="Build a class logic",s={unversionedId:"tutorial-basics/build-a-class-logic",id:"tutorial-basics/build-a-class-logic",title:"Build a class logic",description:"Build a class logic in isolation",source:"@site/docs/tutorial-basics/build-a-class-logic.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/build-a-class-logic",permalink:"/logicbook/docs/tutorial-basics/build-a-class-logic",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/build-a-class-logic.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Build a simple logic",permalink:"/logicbook/docs/tutorial-basics/build-a-simple-logic"},next:{title:"Getting Ready",permalink:"/logicbook/docs/tutorial-extras/sample"}},u={},d=[{value:"Class Calculator Logic",id:"class-calculator-logic",level:2},{value:"1. Create the calculator logic file",id:"1-create-the-calculator-logic-file",level:3},{value:"2. Create the test file",id:"2-create-the-test-file",level:3},{value:"3. Create the markdown file",id:"3-create-the-markdown-file",level:3},{value:"4. Create the logicbook file",id:"4-create-the-logicbook-file",level:3},{value:"5. Run server and check the logic",id:"5-run-server-and-check-the-logic",level:3}],p={toc:d};function m(t){var e=t.components,c=(0,l.Z)(t,o);return(0,r.kt)("wrapper",(0,n.Z)({},p,c,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"build-a-class-logic"},"Build a class logic"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Build a class logic in isolation")),(0,r.kt)("h2",{id:"class-calculator-logic"},"Class Calculator Logic"),(0,r.kt)("p",null,"First, let\u2019s create the calculator logic and its accompanying book file: src/calculator.py and src/logics/calculator_book.py."),(0,r.kt)("h3",{id:"1-create-the-calculator-logic-file"},"1. Create the calculator logic file"),(0,r.kt)("p",null,"We\u2019ll begin with a baseline implementation of the logic. We create src/calculator.py and write below script:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/calculator.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Calculator(object):\n    def __init__(self):\n        pass\n\n    def add(self, a, b):\n        return a + b\n\n    def sub(self, a, b):\n        return a - b\n")),(0,r.kt)("p",null,"The above creates a function that takes a and b as inputs and calculates their addition and subtract value."),(0,r.kt)("h3",{id:"2-create-the-test-file"},"2. Create the test file"),(0,r.kt)("p",null,"Below we create logic\u2019s test using unittest library:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/test_calculator.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import unittest\nfrom calculator import Calculator\n\nclass TestCalculatorAdd(unittest.TestCase):\n\n    def setUp(self):\n        self.calc = Calculator()\n\n    def test_add(self):\n        actual = self.calc.add(1, 2)\n        self.assertEqual(3, actual)\n\nclass TestCalculatorSub(unittest.TestCase):\n\n    def setUp(self):\n        self.calc = Calculator()\n\n    def test_sub(self):\n        actual = self.calc.sub(2, 1)\n        self.assertEqual(1, actual)\n\nif __name__ == '__main__':\n    unittest.main()\n")),(0,r.kt)("h3",{id:"3-create-the-markdown-file"},"3. Create the markdown file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/logics/calculator_add.md")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"# add function of calculator class\n\nThis is add description\n\n### Usage\n---\nfrom calculator import Calculator\n\ncalc = Calculator()\nresult = calc.add(1, 2)\nprint(result)  # 3\n---\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/logics/calculator_sub.md")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"# sub function of calculator class\n\nThis is sub description\n\n### Usage\n---\nfrom calculator import Calculator\n\ncalc = Calculator()\nresult = calc.sub(2, 1)\nprint(result)  # 1\n---\n")),(0,r.kt)("h3",{id:"4-create-the-logicbook-file"},"4. Create the logicbook file"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"src/logics/calculator_book.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from calculator import Calculator\nfrom logicbook import Logic\nfrom test_calculator import TestCalculatorSub, TestCalculatorAdd\n\nadd = Logic(\n    name="Calculator/Add",\n    func=Calculator().add,\n    readme="calculator_add.md",\n)\n\nadd.add_example(\n    name="Default", \n    func=Calculator().add,\n    args={\n        "a": 1,\n        "b": 2\n    })\n\nadd.add_test(\n  name="Test Class of Calculator", \n  cls=TestCalculatorAdd\n)\n\nsub = Logic(\n    name="Calculator/Sub",\n    func=Calculator().sub,\n    readme="calculator_sub.md",\n)\n\nsub.add_example(\n    name="Default", \n    func=Calculator().sub,\n    args={\n        "a": 2,\n        "b": 1\n    })\n\nsub.add_test(\n  name="Test Class of Calculator", \n  cls=TestCalculatorSub\n)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," Logic Arguments ")),(0,r.kt)("p",null,"To tell Logicbook about the logic we are documenting, we enter logic arguments:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'add = Logic(\n    name="Calculator/Add",\n    func=Calculator().add,\n    readme="calculator_add.md",\n)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"how to refer to the component in the sidebar of the Storybook app")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"func"),(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"the logic (function) itself")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"readme"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"readme file path (relative path from logics directory)")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," add_example Arguments ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'add.add_example(\n    name="Default", \n    func=Calculator().add,\n    args={\n        "a": 1,\n        "b": 2\n    })\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"name of example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"func"),(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"the logic (function) itself")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"args"),(0,r.kt)("td",{parentName:"tr",align:null},"dict"),(0,r.kt)("td",{parentName:"tr",align:null},"readme file path (relative path from logics directory)")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," add_test Arguments ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'add.add_test(\n  name="Test Class of Calculator", \n  cls=TestCalculatorAdd\n)\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"name of example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cls"),(0,r.kt)("td",{parentName:"tr",align:null},"class"),(0,r.kt)("td",{parentName:"tr",align:null},"the Testcase (class)")))),(0,r.kt)("h3",{id:"5-run-server-and-check-the-logic"},"5. Run server and check the logic"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"Docs Version Dropdown",src:a(9578).Z,width:"2652",height:"1884"})))}m.isMDXComponent=!0},9578:function(t,e,a){e.Z=a.p+"assets/images/example_add-00c9147b8b3eaafe761fef84ecfab02d.png"}}]);